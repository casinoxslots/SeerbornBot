# -*- coding: utf-8 -*-
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ Python –∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è
"""

import sys
import locale
import os
import io

print("=== üîç PYTHON ENCODING DIAGNOSTICS ===")

# –ü—Ä–æ–≤–µ—Ä–∏–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –∫–æ–¥–∏—Ä–æ–≤–∫–∏
print(f"sys.getdefaultencoding(): {sys.getdefaultencoding()}")
print(f"sys.stdout.encoding: {sys.stdout.encoding}")
print(f"sys.stderr.encoding: {sys.stderr.encoding}")
print(f"locale.getpreferredencoding(): {locale.getpreferredencoding(False)}")

# –ü—Ä–æ–≤–µ—Ä–∏–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
for var in ["LANG", "LC_ALL", "PYTHONUTF8", "PYTHONIOENCODING"]:
    print(f"{var} = {os.getenv(var)}")

# –ü—Ä–æ–≤–µ—Ä–∏–º, –º–æ–∂–µ–º –ª–∏ –≤—ã–≤–µ—Å—Ç–∏ —Ä—É—Å—Å–∫–∏–µ —Å–∏–º–≤–æ–ª—ã
try:
    print("–¢–µ—Å—Ç –≤—ã–≤–æ–¥–∞ –∫–∏—Ä–∏–ª–ª–∏—Ü—ã: –ü—Ä–∏–≤–µ—Ç, –º–∏—Ä üåç")
except Exception as e:
    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ: {e}")

# –ü–æ–ø—Ä–æ–±—É–µ–º –≤—Ä—É—á–Ω—É—é –ø–µ—Ä–µ–∫–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä–æ–≤–∞—Ç—å stdout/stderr
try:
    sys.stdout = io.TextIOWrapper(sys.stdout.buffer, encoding='utf-8')
    sys.stderr = io.TextIOWrapper(sys.stderr.buffer, encoding='utf-8')
    print("‚úÖ –ü–µ—Ä–µ–∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è stdout/stderr –≤ UTF-8 –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ.")
    print("–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–≤–æ–¥–∞ –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: –ü—Ä–∏–≤–µ—Ç, –º–∏—Ä üåô")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")

print("=== ‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–Å–ù ===")
