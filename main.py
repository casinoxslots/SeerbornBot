# -*- coding: utf-8 -*-
# –£–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫—É —Ñ–∞–π–ª–∞, —á—Ç–æ–±—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —Ä—É—Å—Å–∫–∏–µ —Å–∏–º–≤–æ–ª—ã

import sys
import os
from dotenv import load_dotenv               # –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–∑ .env
from telegram import Update                  # –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ Telegram API
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
from openai import OpenAI                    # –∫–ª–∏–µ–Ω—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å OpenAI API

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤—ã–≤–æ–¥–∞ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ–¥ UTF-8 (–≤–∞–∂–Ω–æ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–æ–≤ Linux) ---
sys.stdout.reconfigure(encoding='utf-8')
sys.stderr.reconfigure(encoding='utf-8')
os.environ["PYTHONIOENCODING"] = "utf-8"

# --- –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env ---
load_dotenv()

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω—ã –∏–∑ .env
BOT_TOKEN = os.getenv("BOT_TOKEN")            # –¢–æ–∫–µ–Ω Telegram-–±–æ—Ç–∞
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")  # –ö–ª—é—á OpenAI

# --- –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–æ–≤ ---
if not BOT_TOKEN:
    raise ValueError("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω BOT_TOKEN –≤ .env")
if not OPENAI_API_KEY:
    raise ValueError("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω OPENAI_API_KEY –≤ .env")

# --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ OpenAI ---
client = OpenAI(api_key=OPENAI_API_KEY)

# --- –ö–æ–º–∞–Ω–¥–∞ /start ---
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –≤–≤–æ–¥–µ /start"""
    await update.message.reply_text("üîÆ –ü—Ä–∏–≤–µ—Ç, —è SeerbornBot. –ì–æ—Ç–æ–≤ –∑–∞–≥–ª—è–Ω—É—Ç—å –∑–∞ –≥—Ä–∞–Ω—å?")

# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π ---
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç–≤–µ—Ç —á–µ—Ä–µ–∑ OpenAI"""
    user_message = update.message.text

    try:
        # --- –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ OpenAI ---
        completion = client.chat.completions.create(
            model="gpt-3.5-turbo",  # –º–æ–¥–µ–ª—å OpenAI
            messages=[
                {"role": "system", "content": "–¢—ã –º–∏—Å—Ç–∏—á–µ—Å–∫–∏–π, —Å–∞—Ä–∫–∞—Å—Ç–∏—á–Ω—ã–π –∏ —É–º–Ω—ã–π –ò–ò –ø–æ –∏–º–µ–Ω–∏ Seerborn."},
                {"role": "user", "content": user_message}
            ]
        )

        # --- –ò–∑–≤–ª–µ–∫–∞–µ–º –æ—Ç–≤–µ—Ç –º–æ–¥–µ–ª–∏ ---
        ai_response = completion.choices[0].message.content

        # --- –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ---
        await update.message.reply_text(ai_response.encode('utf-8').decode('utf-8'))

    except Exception as e:
        # --- –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ ---
        await update.message.reply_text(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}")

# --- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è ---
def main():
    """–ó–∞–ø—É—Å–∫ Telegram-–±–æ—Ç–∞"""
    app = Application.builder().token(BOT_TOKEN).build()

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("ü§ñ SeerbornBot –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()  # –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π –æ–ø—Ä–æ—Å Telegram-—Å–µ—Ä–≤–µ—Ä–∞

# --- –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ ---
if __name__ == "__main__":
    main()
