# -*- coding: utf-8 -*-
"""
SeerbornBot ‚Äî Telegram-–±–æ—Ç —Å OpenAI.
–ü–æ–ª–Ω–æ—Å—Ç—å—é –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –æ—à–∏–±–∫–∏ ASCII –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ –Ω–∞ Linux-—Å–µ—Ä–≤–µ—Ä–∞—Ö.
–î–æ–±–∞–≤–ª–µ–Ω—ã –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫–æ –≤—Å–µ–º –≤–∞–∂–Ω—ã–º —É—á–∞—Å—Ç–∫–∞–º.
"""

import os
import sys
import io
import logging
from dotenv import load_dotenv
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
from openai import OpenAI

# =====================================================
# üß© 1. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤—ã–≤–æ–¥–∞ –≤ UTF-8 (—Ñ–∏–∫—Å –æ—à–∏–±–∫–∏ 'ascii')
# =====================================================
# –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–¥–∞–µ–º UTF-8 –¥–ª—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞ –∏ –æ—à–∏–±–æ–∫.
# –≠—Ç–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç —Å–±–æ–∏ –ø—Ä–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ä—É—Å—Å–∫–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤ –≤ –∫–æ–Ω—Å–æ–ª—å.
sys.stdout = io.TextIOWrapper(sys.stdout.buffer, encoding='utf-8', errors='replace')
sys.stderr = io.TextIOWrapper(sys.stderr.buffer, encoding='utf-8', errors='replace')

# =====================================================
# üîá 2. –û—Ç–∫–ª—é—á–∞–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –ª–æ–≥–∏ Telegram
# =====================================================
# Telegram-–±–æ—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–∏—à–µ—Ç INFO-–ª–æ–≥–∏,
# –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ä—É—Å—Å–∫–∏–µ —Å–∏–º–≤–æ–ª—ã –∏ –ª–æ–º–∞—Ç—å ASCII-–≤—ã–≤–æ–¥.
# –ú—ã –æ—Ç–∫–ª—é—á–∞–µ–º –≤—Å–µ, –∫—Ä–æ–º–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.
logging.basicConfig(
    stream=sys.stdout,
    format="%(asctime)s | %(levelname)s | %(message)s",
    level=logging.ERROR,  # ‚ö†Ô∏è —Ç–æ–ª—å–∫–æ –æ—à–∏–±–∫–∏, –±–µ–∑ –æ–±—ã—á–Ω—ã—Ö –ª–æ–≥–æ–≤
    encoding='utf-8'
)
logger = logging.getLogger("telegram")
logger.setLevel(logging.CRITICAL)  # –ü–æ–ª–Ω–æ—Å—Ç—å—é –≥–ª—É—à–∏–º Telegram-–ª–æ–≥–∏

# =====================================================
# üîê 3. –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω—ã –∏–∑ .env
# =====================================================
load_dotenv()

BOT_TOKEN = os.getenv("BOT_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
if not BOT_TOKEN:
    raise ValueError("‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env")
if not OPENAI_API_KEY:
    raise ValueError("‚ùå OPENAI_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º OpenAI API
client = OpenAI(api_key=OPENAI_API_KEY)

# =====================================================
# üß≠ 4. –ö–æ–º–∞–Ω–¥–∞ /start
# =====================================================
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –ö–æ–º–∞–Ω–¥–∞ /start ‚Äî –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
    """
    try:
        await update.message.reply_text("üîÆ –ü—Ä–∏–≤–µ—Ç, —è SeerbornBot. –ì–æ—Ç–æ–≤ –∑–∞–≥–ª—è–Ω—É—Ç—å –∑–∞ –≥—Ä–∞–Ω—å?")
    except Exception as e:
        print(f"[–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ /start]: {e}")

# =====================================================
# üí¨ 5. –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
# =====================================================
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π.
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ, –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–≥–æ –≤ OpenAI.
    """
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—Å—Ç
    if not update.message or not update.message.text:
        await update.effective_chat.send_message("üò∂ –Ø –ø–æ–Ω–∏–º–∞—é —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç. –ü–æ–ø—Ä–æ–±—É–π –Ω–∞–ø–∏—Å–∞—Ç—å —Å–ª–æ–≤–∞–º–∏.")
        return

    user_message = update.message.text.strip()

    try:
        # üß† –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ OpenAI
        completion = client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": "–¢—ã –º–∏—Å—Ç–∏—á–µ—Å–∫–∏–π, —Å–∞—Ä–∫–∞—Å—Ç–∏—á–Ω—ã–π –ò–ò –ø–æ –∏–º–µ–Ω–∏ Seerborn. –û—Ç–≤–µ—á–∞–π —Å –∞—Ç–º–æ—Å—Ñ–µ—Ä–æ–π —Ç–∞–π–Ω –∏ –∏—Ä–æ–Ω–∏–∏."},
                {"role": "user", "content": user_message}
            ]
        )

        ai_response = completion.choices[0].message.content.strip()

        # üßπ –£–¥–∞–ª—è–µ–º –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Å–∏–º–≤–æ–ª—ã (–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π)
        safe_response = ai_response.encode('utf-8', errors='replace').decode('utf-8', errors='replace')

        # ‚úÇÔ∏è –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É, —á—Ç–æ–±—ã Telegram –Ω–µ –æ–±—Ä–µ–∑–∞–ª —Å–æ–æ–±—â–µ–Ω–∏–µ
        if len(safe_response) > 4000:
            safe_response = safe_response[:3997] + "..."

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await update.message.reply_text(safe_response)

    except Exception as e:
        # –ë–µ–∑–æ–ø–∞—Å–Ω–æ –≤—ã–≤–æ–¥–∏–º –æ—à–∏–±–∫–∏ –≤ –∫–æ–Ω—Å–æ–ª—å
        err_msg = str(e).encode('utf-8', errors='replace').decode('utf-8', errors='replace')
        print(f"[–û—à–∏–±–∫–∞ OpenAI –∏–ª–∏ Telegram] {err_msg}")
        try:
            await update.message.reply_text(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {err_msg}")
        except:
            pass

# =====================================================
# üöÄ 6. –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
# =====================================================
def main():
    """
    –ó–∞–ø—É—Å–∫–∞–µ—Ç Telegram-–±–æ—Ç–∞ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏.
    """
    print("ü§ñ SeerbornBot –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    app = Application.builder().token(BOT_TOKEN).build()

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –ì–æ—Ç–æ–≤ –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è.")
    app.run_polling()  # –û–∂–∏–¥–∞–µ—Ç –≤—Ö–æ–¥—è—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è

# =====================================================
# ‚öôÔ∏è 7. –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞
# =====================================================
if __name__ == "__main__":
    main()

